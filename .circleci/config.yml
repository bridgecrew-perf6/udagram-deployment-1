# Use the latest 2.1 version of CircleCI pipeline process engine
version: 2.1

# Specify used packages of CircleCI configuration
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.1
  eb: circleci/aws-elastic-beanstalk@2.0.1

# Repetitive commands through jobs
commands:
  # udagram-api/ installation
  install_api:
    description: Install server-side dependencies and save into cache
    steps:
      # restore previous cache
      - restore_cache:
          keys:
            - api-dependencies-{{ checksum "package.json" }}
            - api-dependencies-

      # perform installation
      - run:
          name: Install udagram-api/
          command: npm run install:api

      # save cache for later installations
      - save_cache:
          key: api-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  # udagram-frontend/ installation
  install_frontend:
    description: Install client-side dependencies and save into cache
    steps:
      # restore previous cache
      - restore_cache:
          keys:
            - front-dependencies-{{ checksum "package.json" }}
            - front-dependencies-

      # perform installation
      - run:
          name: Install udagram-frontend/
          command: npm run install:frontend

      # save cache for later installations
      - save_cache:
          key: front-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules


  # udagram-api/ build command
  build_api:
    description: Build server-side
    steps:
      # perform build.
      - run:
          name: Build udagram-api/
          command: npm run build:api

  # udagram-frontend/ build command
  build_frontend:
    description: Build client-side
    steps:
      # perform build
      - run:
          name: Build udagram-frontend/
          command: npm run build:frontend

# Define a job to be invoked later in a workflow
jobs:
  # Install udagram-api/ dependencies job
  install-api:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - checkout
      - install_api

  # Install udagram-frontend/ dependencies job
  install-frontend:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - checkout
      - install_frontend

  # Build udagram-api/ job
  build-api:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout

      # install udagram-api/
      - install_api

      # Build api job
      - build_api

  # Build udagram-frontend/ job
  build-frontend:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout

      # install udagram-frontend/
      - install_frontend

      # Build frontend job
      - build_frontend

  # Deploy job
  deploy-api:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout

      # install udagram-api/
      - install_api

      # build udagram-api/
      - build_api

      # Deploy udagram-api/
      - run:
          name: Deploy udagram-api/
          command: npm run deploy:api

    # Deploy job
  deploy-frontend:
    # Specify the execution environment
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout

      # install udagram-frontend/
      - install_frontend

      # build udagram-frontend/
      - build_frontend

      # Deploy udagram-frontend/
      - run:
          name: Deploy udagram-frontend/
          command: npm run deploy:frontend

# Invoke jobs via workflows
workflows:
  project-workflow:
    jobs:
      - install-api
      - install-frontend

      - build-api:
          requires:
            - install-api

      - build-frontend:
          requires:
            - install-frontend

      - deploy-api:
          requires:
            - build-api

      - deploy-frontend:
          requires:
            - build-frontend
